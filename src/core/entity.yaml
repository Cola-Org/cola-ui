- name: cola.Entity
  stereotype: class
  label: 数据实体

  constructors:
    - arguments:
        - name: data
          type: json
          optional: true
          label: 以JSON方式定义的初始化数据
        - name: dataType
          type: cola.EntityDataType
          optional: true
          label: 数据类型

  properties:
    - name: state
      type: string
      label: 数据实体的状态
      description: |
        该状态目前有四种可能的取值：
        <ul>
          <li>none - 无状态</li>
          <li>new - 新增状态</li>
          <li>modified - 被修改状态</li>
          <li>deleted - 被删除状态</li>
        </ul>
        参考: <a href="#method:setState">setState(state)</a>

    - name: dataType
      type: cola.EntityDataType
      label: 数据类型

  methods:
    - name: hasValue
      type: boolean
      label: 判断某属性中是否有值
      arguments:
        - name: prop
          type: string
          label: 属性名

    - name: get
      type: any
      label: 获取一个属性的值
      description: |
        当一个属性的值是懒装载的，那么在我们通过get()方法尝试从此属性中读取内容时，Cola会利用loadMode参数的值来确定要如何来装载尚未装载的数据。
      arguments:
        - name: prop
          type: string
          label: 属性名或路径
        - name: loadMode
          type: string | function | Object
          defaultValue: async
          optional: true
          label: 懒加载属性的装载模式，默认值为async。
          description: |
            该装载模式目前有四种可能的取值：
            <ul>
              <li>async - 异步装载模式</li>
              <li>sync - 同步装载模式</li>
              <li>never - 不装载</li>
              <li>
              传入一个回调方法或一个回调对象，相当于按照异步模式装载，同时定义了该异步操作的回调方法或回调对象。
              回调对象的定义请参考: <a href="/docs/definitions">回调对象</a>
              </li>
            </ul>

    - name: set
      type: cola.Entity
      label: 设置一个属性的值
      arguments:
        - name: name
          type: string
          label: 属性名或路径
        - name: value
          type: any
          label: 数据

    - name: set
      type: cola.Entity
      label: 设置一批属性的值
      arguments:
        - name: data
          type: json
          label: 以JSON方式定义的一批属性值

    - name: remove
      type: cola.Entity
      label: 删除当前数据实体。
      description: |
        如果这个数据实体此时是另一个父Entity的某属性值，或者它正隶属于某个EntityList。
        那么，此操作也会将此数据实体从父Entity或EntityList中移除。

    - name: createChild
      type: cola.Entity
      label: 在某个属性中创建一个新的子Entity并返回。
      description: |
        如果之前已经通过DataType声明了相应子属性的DataType，那么新创建的子Entity将是与该DataTypre匹配的。
      arguments:
        - name: prop
          type: string
          label: 属性名
        - name: data
          type: json
          label: 以JSON方式定义的一批属性值，用于初始化新Entity中的数据。此参数可省略。
          optional: true

    - name: createBrother
      type: cola.Entity
      label: 创建一个兄弟Entity并返回。
      description: |
        此方法首先会创建一个与当前Entity类型相同的新Entity，如果当前Entity隶属于某个EntityList，那么新创建的Entity还会被自动添加到EntityList中。
      arguments:
        - name: data
          type: json
          label: 以JSON方式定义的一批属性值，用于初始化新Entity中的数据。此参数可省略。
          optional: true

    - name: setState
      type: cola.Entity
      label: 设置数据实体的状态
      description: |
        该状态有四种取值:
        <ul>
          <li>none - 无状态</li>
          <li>new - 新增状态</li>
          <li>modified - 被修改状态</li>
          <li>deleted - 被删除状态</li>
        </ul>
        参考: <a href="#property:state">state</a>
      arguments:
        - name: state
          type: string

    - name: getOldValue
      type: any
      label: 返回某属性的旧值
      description: |
        即返回某属性修改之前的值。如果当前Entity并不处于modified状态，那么此方法将返回undefined。
      arguments:
        - name: prop
          type: string
          label: 属性名

    - name: reset
      type: cola.Entity
      label: 重置某个属性或整个Entity
      description: |
        如果定义了prop参数，那么此方法会清除该属性的值和相关的校验信息，但此种清除并不会导致Entity的状态发生改变。
        如果没有定义prop参数，那么此方法会清除整个Entity中的所有数据和校验信息并重置整个Entity的状态。
      arguments:
        - name: prop
          type: string
          label: 属性名
          optional: true

    - name: resetState
      type: cola.Entity
      label: 清除所有校验信息并重置整个Entity的状态

    - name: getDataType
      type: cola.DataType
      label: 根据路径查找并返回DataType。
      description: |
        如果没有定义path参数，那么此方法会直接返回当前Entity的DataType。
        如果定义了path参数，那么此方法会根据这个路径返回相应子属性或子对象的DataType。
      arguments:
        - name: path
          type: string
          label: 属性名或路径
          optional: true

    - name: getPath
      type: [string]
      label: 返回当前Entity的数据路径

    - name: flush
      type: cola.Entity
      label: 刷新某个属性的数据
      description: |
        此方法只有在该属性的数据是通过cola.Provider获取的情况下是有效的，即通知Cola清空该属性的数据并重新利用Provider获取。
      arguments:
        - name: prop
          type: string
          label: 属性名
        - name: loadMode
          type: string | function | Object
          defaultValue: async
          optional: true
          label: 懒加载属性的装载模式，默认值为async。
          description: |
            该装载模式目前有四种可能的取值：
            <ul>
              <li>async - 异步装载模式</li>
              <li>sync - 同步装载模式</li>
              <li>never - 不装载</li>
              <li>
              传入一个回调方法或一个回调对象，相当于按照异步模式装载，同时定义了该异步操作的回调方法或回调对象。
              回调对象的定义请参考: <a href="/docs/definitions">回调对象</a>
              </li>
            </ul>

    - name: disableObservers
      type: cola.Entity
      label: 将禁止Entity向观察者发送消息
      description: 参考 <a href="cola.Model.html:method:disableObservers">cola.Model.disableObservers()</a>

    - name: enableObservers
      type: cola.Entity
      label: 将禁止Entity向观察者发送消息
      description: 参考 <a href="cola.Model.html:method:disableObservers">cola.Model.disableObservers()</a>

    - name: notifyObservers
      type: cola.Entity
      label: 将禁止Entity向观察者发送消息
      description: 参考 <a href="cola.Model.html:method:disableObservers">cola.Model.disableObservers()</a>

    - name: validate
      type: boolean
      label: 校验当前Entity中的数据并返回是否校验通过
      description: |
        如果定义了属性名，那么此方法只校验指定的属性，否则将校验每一个属性。
      arguments:
        - name: prop
          type: string
          label: 属性名
          optional: true

    - name: toJSON
      type: json
      label: 将Entity转换成一个JSON对象
      arguments:
        - name: options
          type: json
          label: 选项
          optional: true
          arguments:
            - name: state
              type: boolean
              label: 是否转换Entity的状态
            - name: oldData
              type: boolean
              label: 是否转换旧值
              description: |
                如果启用此选项Cola会将所有旧值转换成一个JSON对象并存入名为 $oldData 的子属性中。

- name: cola.EntityList
  stereotype: class
  label: 数据实体集合
  description: |
    关于EntityList的分页功能，此处需要特别做些说明。EntityList除了有一个pageCount属性之外，还有一个叫pageCountDetermined的属性。
    Provider返回集合型数据时有3种方式来支持分页：
    <ul>
    <li>
    返回一个JSON而不是Array。
    JSON中的$data用来放当前页的数据，它是一个数组，
    再通过这个JSON中的$totalEntityCount属性来声明集合的总记录数（不是指当前页的记录数）。
    完成第一次的数据装载之后，EntityList就已经得到了确定的pageCount和totalEntityCount，同时pageCountDetermined也将变成true。
    </li>
    <li>
    如果设置了Provider的detectEnd属性为true，那么Provider会自动尝试向后端多请求一条记录。
    比如我们设置pageSize为10，当前加载第3页，那么Provider实际向后端发出的请求中的from和limit参数将是20和11。
    此时后端只需要直接向前台返回数组即可，前台根据获得的结果是否足够11条，来确定是否还存在下一页。
    在还没有加载到最后一页之前，EntityList并不知道确定的pageCount和totalEntityCount，pageCountDetermined的值也是false。
    当装载到最后一页时才能确定pageCount和totalEntityCount，并且将pageCountDetermined变为true。
    </li>
    <li>
    如果不设置Provider的detectEnd属性为true，那么Provider不会通过多请求一条记录的方式来提前判断是否存在下一页。
    因此在最后一页的记录数刚好等于pageSize时，EntityList仍会以为存在下一页数据。这在部分场景下并不会存在问题。
    只有当装载某一页数据时记录数小于pageSize时，才能确定pageCount和totalEntityCount，并且将pageCountDetermined变为true。
    </li>
    </ul>

  constructors:
    - arguments:
        - name: array
          type: array
          optional: true
          label: 以JSON数组方式定义的初始化数据
        - name: dataType
          type: cola.EntityDataType
          optional: true
          label: 数据类型

  properties:
    - name: current
      type: cola.Entity
      label: 当前Entity
      description: |
        EntityList总是会尝试维护一个当前Entity，默认情况下它是EntityList中的第一个Entity。

    - name: entityCount
      type: number
      label: 当前EntityList中子Entity的数量
      description: |
        注意此数量是不包含那些已被标记为deleted的Entity的。

    - name: pageSize
      type: number
      label: 分页大小，即每页的条目数。

    - name: pageNo
      type: number
      label: 当前页的页号，从1开始计数。

    - name: pageCount
      type: number
      label: 总的页数

    - name: pageCountDetermined
      type: boolean
      label: 总页数是否是你一个已经确定的值。
      description: |
        默认情况下pageCountDetermined为false，此时Cola不认为pageCount属性标示的是真实的总页数，它只代表当前EntityList已经装载的页数。
        即默认Cola总是认为当前EntityList的最后一页之后可能存在下一页的数据可被装载的。
        在下列两种情况下，Cola会将pageCountDetermined设置为true...
        <ul>
          <li>某一次装载下一页数据时，得到的数据量少于pageSize，此时Cola认为本次装载的是EntityList的最后一页。</li>
          <li>
          装载下一页数据时，Server端返回的数据中包含entityCount的定义，此时Cola会根据此entityCount计算中总的页数。
          在返回数据中指定entityCount的形式如下：
          <code>
          {
            $entityCount: 1000,
            $data: [  // 实际的分页数据
              { ... },
              { ... },
              { ... },
              { ... },
              ...
            ]
          }
          </code>
          </li>
        </ul>

    - name: totalEntityCount
      type: number
      label: 总的Entity数量。
      description: |
        entityCount用于表示EntityList中当前实际有多少个Entity，不包含尚未下载的。而totalEntityCount则是包含尚未下载的Entity的总数量。
        totalEntityCount有时并不是一个准确的或者确定的数字，这取决于Server端返回的数据中有没有包含entityCount的定义。
        如果没有，那么我们通过totalEntityCount拿到的只是根据页数和每页记录数估算出来的一个数字。

  methods:
    - name: fillData
      type: cola.EntityList
      label: 利用数组填充当前页的数据
      arguments:
        - name: array
          type: string
          label: 以JSON数组方式定义的数据

    - name: hasNextPage
      type: boolean
      label: 当前页之后是否还有下一页的数据
      description: |
        例如当我们用EntityList显示一个列表，当用户滚动到最后一行之后，Cola内部依此方法的返回结果判断是否需要尝试装载下一页的数据。
        参考: <a href="#property:pageCountDetermined">pageCountDetermined</a>

    - name: loadPage
      type: cola.EntityList
      label: 装载指定页的数据
      arguments:
        - name: pageNo
          type: mnumber
          label: 要装载的页号
        - name: loadMode
          type: string
          defaultValue: async
          optional: true
          label: 装载模式
          description: |
            该装载模式目前有四种可能的取值：
            <ul>
              <li>async - 异步装载模式</li>
              <li>sync - 同步装载模式</li>
              <li>never - 不装载</li>
              <li>
              传入一个回调方法或一个回调对象，相当于按照异步模式装载，同时定义了该异步操作的回调方法或回调对象。
              回调对象的定义请参考: <a href="/docs/definitions">回调对象</a>
              </li>
            </ul>

    - name: gotoPage
      type: cola.EntityList
      label: 跳转到指定的页
      arguments:
        - name: pageNo
          type: mnumber
          label: 要前往的页号
        - name: loadMode
          type: string
          defaultValue: async
          optional: true
          label: 装载模式。参考：<a href="#method:loadPage">loadPage</a>

    - name: firstPage
      type: cola.EntityList
      label: 跳转到第一页
      arguments:
        - name: loadMode
          type: string
          defaultValue: async
          optional: true
          label: 装载模式。参考：<a href="#method:loadPage">loadPage</a>

    - name: previousPage
      type: cola.EntityList
      label: 跳转到上一页
      arguments:
        - name: loadMode
          type: string
          defaultValue: async
          optional: true
          label: 装载模式。参考：<a href="#method:loadPage">loadPage</a>

    - name: nextPage
      type: cola.EntityList
      label: 跳转到下一页
      arguments:
        - name: loadMode
          type: string
          defaultValue: async
          optional: true
          label: 装载模式。参考：<a href="#method:loadPage">loadPage</a>

    - name: lastPage
      type: cola.EntityList
      label: 跳转到最后一页
      arguments:
        - name: loadMode
          type: string
          defaultValue: async
          optional: true
          label: 装载模式。参考：<a href="#method:loadPage">loadPage</a>

    - name: insert
      type: cola.Entity
      label: 向EntityList中添加一个Entity
      description: |
        在实际使用过程中，向EntityList中插入数据的方法很多。很多时候用其他方法来完成这一操作会让代码看起来更加简洁明了。
        请参考：
        <ul>
          <li><a href="cola.Entity.html#method:createChild">Entity.createChild()</a></li>
          <li><a href="cola.Entity.html#method:createBrother">Entity.createBrother()</a></li>
        </ul>
      arguments:
        - name: entity
          type: json | cola.Entity
          optional: true
          label: 要添加的Entity
          description: |
            如果向此参数中传入一个JSON对象，那么Cola会自动将其转换成cola.Entity的实例。
        - name: insertMode
          type: string
          defaultValue: end
          optional: true
          label: 插入模式
          description: |
            该插入模式目前有四种可能的取值：
            <ul>
              <li>begin - 在最前面插入</li>
              <li>before - 在refEntity之前插入</li>
              <li>after - 在refEntity之后插入</li>
              <li>end - 在最后插入</li>
            </ul>
        - name: refEntity
          type: cola.Entity
          optional: true
          label: 参照Entity
          description: |
            如果不指定此参数则以EntityList中的当前Entity作为参照Entity。

    - name: remove
      type: cola.Entity
      label: 从EntityList中删除一个Entity
      description: |
        在实际使用过程中，建议您直接使用<a href="cola.Entity.html#method:remove">Entity.remove()</a>来完成这一操作。
      arguments:
        - name: entity
          type: cola.Entity
          optional: true
          label: 要删除的Entity
          description: |
            如果不指定此参数则表示要删除EntityList中的当前Entity。
        - name: detach
          type: boolean
          optional: true
          label: 是否要将该Entity从该EntityList中彻底移除
          description: |
            在默认情况下，当我们从EntityList和删除一个Entity时，Cola只是将它的状态修改为delete，并没有真正的把它从EntityList中移除掉。
            这样当我们对这个EntityList做提交时，我们还可以从中遍历出哪些Entity是需要在Server端做删除处理的。
            如果将此参数设置为true，那么该Entity会在删除是彻底中EntityList中移除。

    - name: setCurrent
      type: cola.EntityList
      label: 将某个Entity设定为EntityList的当前Entity
      arguments:
        - name: entity
          type: cola.Entity
          label: 要设定的当前Entity

    - name: first
      type: cola.Entity
      label: 将EntityList中的第一个Entity设定为当前Entity

    - name: previous
      type: cola.Entity
      label: 将当前Entity的前一个Entity设定为当前Entity

    - name: previous
      type: cola.Entity
      label: 将当前Entity的下一个Entity设定为当前Entity

    - name: last
      type: cola.Entity
      label: 将EntityList中的最后一个Entity设定为当前Entity

    - name: getPath
      type: [string]
      label: 返回当前EntityList的数据路径

    - name: flush
      type: cola.EntityList
      label: 刷新该EntityList
      description: |
        此方法只有在该EntityList是通过cola.Provider获取的情况下是有效的，即通知Cola清空该EntityList中所有的数据并重新利用Provider获取。
      arguments:
        - name: loadMode
          type: string | function | Object
          defaultValue: async
          optional: true
          label: 懒加载属性的装载模式，默认值为async。
          description: |
            该装载模式目前有四种可能的取值：
            <ul>
              <li>async - 异步装载模式</li>
              <li>sync - 同步装载模式</li>
              <li>never - 不装载</li>
              <li>
              传入一个回调方法或一个回调对象，相当于按照异步模式装载，同时定义了该异步操作的回调方法或回调对象。
              回调对象的定义请参考: <a href="/docs/definitions">回调对象</a>
              </li>
            </ul>

    - name: disableObservers
      type: cola.EntityList
      label: 将禁止EntityList向观察者发送消息
      description: 参考 <a href="cola.Model.html:method:disableObservers">cola.Model.disableObservers()</a>

    - name: enableObservers
      type: cola.EntityList
      label: 将禁止EntityList向观察者发送消息
      description: 参考 <a href="cola.Model.html:method:disableObservers">cola.Model.disableObservers()</a>

    - name: notifyObservers
      type: cola.EntityList
      label: 将禁止EntityList向观察者发送消息
      description: 参考 <a href="cola.Model.html:method:disableObservers">cola.Model.disableObservers()</a>

    - name: toJSON
      type: [json]
      label: 将EntityList转换成一个JSON对象的数组
      arguments:
        - name: options
          type: json
          label: 选项
          optional: true
          arguments:
            - name: deleted
              type: boolean
              label: 是否转换那些被标为已删除的Entity
            - name: state
              type: boolean
              label: 是否转换Entity的状态
              description: |
                如果启用此选项Cola会将状态存入名为 $state 的JSON属性中。
            - name: oldData
              type: boolean
              label: 是否转换旧值
              description: |
                如果启用此选项Cola会将所有旧值转换成一个JSON对象并存入名为 $oldData 的子属性中。

    - name: toArray
      type: [cola.Entity]
      label: 以数组的形式返回集合中的所有Entity

    - name: each
      type: cola.EntityList
      label: 迭代集合中的Entity
      arguments:
        - name: fn
          type: function
          label: 迭代方法
          description: |
            此方法支持一个传入参数，回调时该参数的值即是当前迭代的Entity。
            如果我们在某此回调时返回了false，那么迭代过程会就此终止，类似于在循环体中使用了break。其他任何返回值或不定义返回值，迭代过程都将继续执行。
        - name: options
          type: json
          label: 选项
          optional: true
          arguments:
            - name: deleted
              type: boolean
              label: 是否转换那些被标为已删除的Entity
            - name: currenPage
              type: boolean
              label: 是否只迭代当前页中的Entity
            - name: pageNo
              type: number
              label: 是否只迭代指定的页中的Entity