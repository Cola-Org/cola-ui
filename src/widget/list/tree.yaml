- name: cola.TreeNode
  stereotype: class
  super: cola.Node
  label: 树中的节点

  attributes:
    - name: expanded
      type: boolean
      label: 该树节点是否处于展开状态

    - name: hasExpanded
      type: boolean
      readOnly: true
      label: 该树节点是否曾经被展开过

    - name: checked
      type: boolean
      label: 该树节点是否被勾选

- name: cola.TreeNodeBind
  stereotype: class
  super: cola.CascadeBind
  label: 树使用的级联绑定声明对象

  attributes:
    - name: textProperty
      type: string
      label: 默认情况下作为节点显示内容的属性名。

    - name: expandedProperty
      type: string
      label: 用于判断某个节点是否默认展开的属性名。

    - name: checkedProperty
      type: string
      label: 用于判断某个节点是否勾选的属性名。

    - name: autoCheckChildren
      type: boolean
      defaultValue: true
      label: 使用在勾选或取消勾选该节点时自动处理其中子节点的勾选状态

- name: cola.Tree
  stereotype: class
  super: cola.ItemsView
  label: 用于实现级联式绑定的声明对象

  attributes:
    - name: bind
      type: cola.TreeNodeBind
      label: 级联绑定声明对象

    - name: currentNode
      type: cola.TreeNode
      label: 当前树节点

    - name: currentItemAlias
      type: string
      label: 当前树节点使用的模型别名
      description: |
        此属性的含义有些晦涩。
        假设我们有一课显示所有分类的树，同时界面上还有一个列表用于显示树中当前分类下的所有商品。
        此时，你是无法为这个列表定义它的绑定表达式的，你只能通过树的`currentNodeChange`事件，将当前分类中的商品列表取出来设置给列表的items属性。
        这听起来有点麻烦。
        利用`currentItemAlias`属性，我们就有了另外一种解决问题的方案。假设我们定义`currentItemAlias`的值为`currentCategory`。
        此时，树就会自动将当前节点会对应的数据设置到`Model`的`currentCategory`这个数据项中。
        这意味着我们只要将列表的绑定表达式设置为`currentCategory.products`就可以实现上面功能了，不需要编写Javascript代码。

    - name: autoCollapse
      type: boolean
      label: 是否在展开某个树节点时自动收缩与其同层的其他树节点

    - name: autoExpand
      type: boolean
      label: 是否在用户点击某个树节点时自动展开该节点
  methods:
    - name: findNode
      label: 获得Entity对应的树节点
      arguments:
        - name: entity
          type: cola.Entity
          return cola.TreeNode
